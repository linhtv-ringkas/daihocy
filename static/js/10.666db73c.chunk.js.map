{"version":3,"sources":["components/form/clinicalInfo.tsx","components/form/semenChartInfo.tsx","features/male/index.tsx"],"names":["FAMILY_LIST","value","label","FormClinicalInfo","formControl","defaultValue","control","errors","formState","watch","watchDiseaseAcquired","watchHistoryDrugAllergy","watchToxicAgent","watchGeneticPathologyType","watchGeneticPathologyType1","watchGeneticPathologyType2","watchGeneticPathologyType3","className","name","get","render","field","ref","others","type","errorMsg","inputRef","FormControlLabel","labelPlacement","options","DAY_LIST","COUNT_LIST","RESULT_LIST","DIAGNOSE_LIST","FormSemenChartInfo","inputProps","Male","navigate","useNavigate","FormSchema","yup","shape","FormInfoSchema","useUpdateInfoMutation","sendInfo","updateInfoState","useForm","mode","resolver","yupResolver","handleSubmit","setValue","watchPhone","useEffect","console","log","isSuccess","isLoading","close","AlertModal","title","description","bottomText","onBottomClick","state","useGetInfoMaleQuery","skip","PHONE_REGEX","test","data","Object","keys","length","entries","key","onSubmit","color","variant"],"mappings":"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","file":"static/js/10.666db73c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Controller, UseFormReturn } from \"react-hook-form\";\nimport { get } from \"lodash\";\nimport Input from \"../control/input\";\nimport { FormControlLabel } from \"@material-ui/core\";\nimport Select from \"../control/select\";\nimport Checkbox from \"../control/checkbox\";\n\nexport type FormClinicalInfoValues = {\n  medicalHistory: string;\n  diseaseAcquired: boolean;\n  diseaseAcquiredOther: string;\n  historyDrugAllergy: boolean;\n  historyDrugAllergyOther: string;\n  toxicAgent: boolean;\n  toxicAgentOther: string;\n  geneticPathologyType: number;\n  geneticPathologyReason: string;\n  geneticPathologyType1: number;\n  geneticPathologyReason1: string;\n  geneticPathologyType2: number;\n  geneticPathologyReason2: string;\n  geneticPathologyType3: number;\n  geneticPathologyReason3: string;\n};\n\ninterface Props {\n  defaultValue?: FormClinicalInfoValues;\n  formControl: UseFormReturn<any>\n}\n\nconst FAMILY_LIST = [\n  {\n    value: 0,\n    label: 'Không'\n  }, {\n    value: 1,\n    label: 'Bố'\n  }, {\n    value: 2,\n    label: 'Mẹ'\n  }, {\n    value: 3,\n    label: 'Anh chị em'\n  }, {\n    value: 4,\n    label: 'Họ hàng'\n  },\n]\n\nconst FormClinicalInfo: React.FC<Props>= ({formControl,defaultValue})=> {\n  const {\n    control,\n    formState: { errors },\n    watch,\n  } = formControl;\n\n  const watchDiseaseAcquired = watch(\"diseaseAcquired\", false);\n  const watchHistoryDrugAllergy = watch(\"historyDrugAllergy\", false);\n  const watchToxicAgent = watch(\"toxicAgent\", false);\n  const watchGeneticPathologyType = watch(\"geneticPathologyType\", 0);\n  const watchGeneticPathologyType1 = watch(\"geneticPathologyType1\", 0);\n  const watchGeneticPathologyType2 = watch(\"geneticPathologyType2\", 0);\n  const watchGeneticPathologyType3 = watch(\"geneticPathologyType3\", 0);\n\n  return (\n    <div className=\"my-6 p-6 bg-white rounded-2xl\">\n      <div className=\"font-bold text-md mb-6 uppercase\">THÔNG TIN LÂM SÀNG</div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-6 gap-4\">\n        <Controller\n          name=\"medicalHistory\"\n          control={control}\n          defaultValue={get(defaultValue, \"medicalHistory\", \"\" )}\n          render={({ field: { ref, ...others } }) => (\n            <Input\n              label=\"Bệnh sử\"\n              className=\"w-full mb-3 sm:col-span-6\"\n              type=\"text\"\n              errorMsg={get(errors, \"medicalHistory.message\", \"\")}\n              inputRef={ref}\n              {...others}\n            />\n          )}\n        />\n        <Controller\n          name=\"diseaseAcquired\"\n          control={control}\n          defaultValue={get(defaultValue, \"diseaseAcquired\", false)}\n          render={({ field: { ref, ...others } }) => (\n            <FormControlLabel\n              className=\"sm:col-start-1 sm:col-span-3\"\n              control={<Checkbox />}\n              label=\"Bệnh tật đã mắc\"\n              labelPlacement=\"end\"\n              {...others}\n            />\n          )}\n        />\n        {watchDiseaseAcquired &&\n        <Controller\n            name=\"diseaseAcquiredOther\"\n            control={control}\n            defaultValue={get(defaultValue, \"diseaseAcquiredOther\", \"\")}\n            render={({ field: { ref, ...others } }) => (\n              <Input\n                label=\"Bệnh tật đã mắc\"\n                className=\"w-full mb-3 sm:col-span-3\"\n                type=\"text\"\n                errorMsg={get(errors, \"diseaseAcquiredOther.message\", \"\")}\n                inputRef={ref}\n                {...others}\n              />\n            )}\n        />}\n        <Controller\n          name=\"historyDrugAllergy\"\n          control={control}\n          defaultValue={get(defaultValue, \"historyDrugAllergy\", \"\")}\n          render={({ field: { ref, ...others } }) => (\n            <FormControlLabel\n              className=\"sm:col-start-1 sm:col-span-3\"\n              control={<Checkbox />}\n              label=\"Tiền sử ngộ độc/dị ứng thuốc\"\n              labelPlacement=\"end\"\n              {...others}\n            />\n          )}\n        />\n        {watchHistoryDrugAllergy &&\n        <Controller\n            name=\"historyDrugAllergyOther\"\n            control={control}\n            defaultValue={get(defaultValue, \"historyDrugAllergyOther\", \"\")}\n            render={({ field: { ref, ...others } }) => (\n              <Input\n                label=\"Tiền sử ngộ độc/dị ứng thuốc\"\n                className=\"w-full mb-3 sm:col-span-3\"\n                type=\"text\"\n                errorMsg={get(errors, \"historyDrugAllergyOther.message\", \"\")}\n                inputRef={ref}\n                {...others}\n              />\n            )}\n        />}\n        <Controller\n          name=\"toxicAgent\"\n          control={control}\n          defaultValue={get(defaultValue, \"toxicAgent\", \"\")}\n          render={({ field: { ref, ...others } }) => (\n            <FormControlLabel\n              className=\"sm:col-start-1 sm:col-span-3\"\n              control={<Checkbox />}\n              label=\"Tiếp xúc với tác nhân độc hại\"\n              labelPlacement=\"end\"\n              {...others}\n            />\n          )}\n        />\n        {watchToxicAgent &&\n        <Controller\n            name=\"toxicAgentOther\"\n            control={control}\n            defaultValue={get(defaultValue, \"toxicAgentOther\", \"\")}\n            render={({ field: { ref, ...others } }) => (\n              <Input\n                label=\"Tiếp xúc với tác nhân độc hại\"\n                className=\"w-full mb-3 sm:col-span-3\"\n                type=\"text\"\n                errorMsg={get(errors, \"toxicAgentOther.message\", \"\")}\n                inputRef={ref}\n                {...others}\n              />\n            )}\n        />}\n        <label className=\"w-full sm:col-span-6 font-bold\">\n          Có ai trong gia đình và họ hàng mắc bệnh lý di truyền không?\n        </label>\n        <Controller\n          name=\"geneticPathologyType\"\n          control={control}\n          defaultValue={get(defaultValue, \"geneticPathologyType\", 0)}\n          render={({ field: { ref, ...others } }) => (\n            <Select\n              className=\"sm:col-start-1 w-full mb-3 sm:col-span-3\"\n              options={FAMILY_LIST}\n              {...others}\n            />\n          )}\n        />\n        {watchGeneticPathologyType > 0 &&\n        <Controller\n            name=\"geneticPathologyReason\"\n            control={control}\n            defaultValue={get(defaultValue, \"geneticPathologyReason\", \"\")}\n            render={({ field: { ref, ...others } }) => (\n              <Input\n                label=\"Loại bệnh lý mắc\"\n                className=\"w-full mb-3 sm:col-span-3\"\n                type=\"text\"\n                errorMsg={get(errors, \"geneticPathologyReason.message\", \"\")}\n                inputRef={ref}\n                {...others}\n              />\n            )}\n        />}\n        <Controller\n          name=\"geneticPathologyType1\"\n          control={control}\n          defaultValue={get(defaultValue, \"geneticPathologyType1\", 0)}\n          render={({ field: { ref, ...others } }) => (\n            <Select\n              className=\"sm:col-start-1 w-full mb-3 sm:col-span-3\"\n              options={FAMILY_LIST}\n              {...others}\n            />\n          )}\n        />\n        {watchGeneticPathologyType1 > 0 &&\n        <Controller\n            name=\"geneticPathologyReason1\"\n            control={control}\n            defaultValue={get(defaultValue, \"geneticPathologyReason1\", \"\")}\n            render={({ field: { ref, ...others } }) => (\n              <Input\n                label=\"Loại bệnh lý mắc\"\n                className=\"w-full mb-3 sm:col-span-3\"\n                type=\"text\"\n                errorMsg={get(errors, \"geneticPathologyReason1.message\", \"\")}\n                inputRef={ref}\n                {...others}\n              />\n            )}\n        />}\n        <Controller\n          name=\"geneticPathologyType2\"\n          control={control}\n          defaultValue={get(defaultValue, \"geneticPathologyType2\", 0)}\n          render={({ field: { ref, ...others } }) => (\n            <Select\n              className=\"sm:col-start-1 w-full mb-3 sm:col-span-3\"\n              options={FAMILY_LIST}\n              {...others}\n            />\n          )}\n        />\n        {watchGeneticPathologyType2 > 0 &&\n        <Controller\n            name=\"geneticPathologyReason2\"\n            control={control}\n            defaultValue={get(defaultValue, \"geneticPathologyReason2\", \"\")}\n            render={({ field: { ref, ...others } }) => (\n              <Input\n                label=\"Loại bệnh lý mắc\"\n                className=\"w-full mb-3 sm:col-span-3\"\n                type=\"text\"\n                errorMsg={get(errors, \"geneticPathologyReason2.message\", \"\")}\n                inputRef={ref}\n                {...others}\n              />\n            )}\n        />}\n        <Controller\n          name=\"geneticPathologyType3\"\n          control={control}\n          defaultValue={get(defaultValue, \"geneticPathologyType3\", 0)}\n          render={({ field: { ref, ...others } }) => (\n            <Select\n              className=\"sm:col-start-1 w-full mb-3 sm:col-span-3\"\n              options={FAMILY_LIST}\n              {...others}\n            />\n          )}\n        />\n        {watchGeneticPathologyType3 > 0 &&\n        <Controller\n            name=\"geneticPathologyReason3\"\n            control={control}\n            defaultValue={get(defaultValue, \"geneticPathologyReason3\", \"\")}\n            render={({ field: { ref, ...others } }) => (\n              <Input\n                label=\"Loại bệnh lý mắc\"\n                className=\"w-full mb-3 sm:col-span-3\"\n                type=\"text\"\n                errorMsg={get(errors, \"geneticPathologyReason3.message\", \"\")}\n                inputRef={ref}\n                {...others}\n              />\n            )}\n        />}\n      </div>\n    </div>\n  );\n}\n\nexport default FormClinicalInfo;","import React from \"react\";\nimport { Controller, UseFormReturn } from \"react-hook-form\";\nimport { get } from \"lodash\";\nimport Select from \"../control/select\";\n\nexport type FormSemenChartInfoValues = {\n  medicalHistory: string;\n  diseaseAcquired: boolean;\n  diseaseAcquiredOther: string;\n  historyDrugAllergy: boolean;\n  historyDrugAllergyOther: string;\n  toxicAgent: boolean;\n  toxicAgentOther: string;\n  geneticPathologyType: number;\n  geneticPathologyReason: string;\n  geneticPathologyType1: number;\n  geneticPathologyReason1: string;\n  geneticPathologyType2: number;\n  geneticPathologyReason2: string;\n  geneticPathologyType3: number;\n  geneticPathologyReason3: string;\n};\n\ninterface Props {\n  defaultValue?: FormSemenChartInfoValues;\n  formControl: UseFormReturn<any>\n}\n\nconst DAY_LIST = [\n  {\n    value: 0,\n    label: 'Chọn ngày'\n  },\n  {\n    value: 1,\n    label: '< 2 ngày'\n  },\n  {\n    value: 2,\n    label: '2-7 ngày'\n  },\n  {\n    value: 3,\n    label: '> 7 ngày'\n  },]\nconst COUNT_LIST = [\n  {\n    value: 0,\n    label: 'Chưa'\n  }, {\n    value: 1,\n    label: '1 lần'\n  }, {\n    value: 2,\n    label: '2 lần'\n  }, {\n    value: 3,\n    label: '> 2 lần'\n  },\n]\n\nconst RESULT_LIST = [\n  {\n    value: 0,\n    label: 'Chưa'\n  }, {\n    value: 1,\n    label: 'Có nhiều tinh trùng'\n  }, {\n    value: 2,\n    label: 'Có ít tinh trùng'\n  }, {\n    value: 3,\n    label: 'Không có tinh trùng'\n  },\n]\n\nconst DIAGNOSE_LIST = [\n  {\n    value: 0,\n    label: 'Chưa'\n  }, {\n    value: 1,\n    label: 'Dị tật bẩm sinh'\n  }, {\n    value: 2,\n    label: 'Trước hôn nhân'\n  }, {\n    value: 3,\n    label: 'Sàng lọc trước sinh'\n  }, {\n    value: 4,\n    label: 'Di truyền sinh sản'\n  }, {\n    value: 5,\n    label: 'Khác'\n  },\n]\n\nconst FormSemenChartInfo: React.FC<Props> = ({formControl, defaultValue}) => {\n  const {\n    control,\n  } = formControl;\n\n  return (<div className=\"my-6 p-6 bg-white rounded-2xl\">\n    <div className=\"font-bold text-md mb-6 uppercase\">Xét nghiệm tinh dịch đồ</div>\n    <div className=\"grid grid-cols-1 sm:grid-cols-6 gap-4\">\n      <Controller\n        name=\"nearestEjaculationType\"\n        control={control}\n        defaultValue={get(defaultValue, \"nearestEjaculationType\", 0)}\n        render={({field: {ref, ...others}}) => (<Select\n          className=\"w-full mb-3 sm:col-span-6\"\n          options={DAY_LIST}\n          inputProps={{label: \"Lần xuất tinh gần nhất cách mấy ngày\"}}\n          {...others}\n        />)}\n      />\n      <Controller\n        name=\"semenTestType\"\n        control={control}\n        defaultValue={get(defaultValue, \"semenTestType\", 0)}\n        render={({field: {ref, ...others}}) => (<Select\n          className=\"w-full mb-3 sm:col-span-6\"\n          options={COUNT_LIST}\n          inputProps={{label: \"Trước đây đã từng xét nghiệm tinh dịch đồ chưa?\"}}\n          {...others}\n        />)}\n      />\n      <Controller\n        name=\"resultSemenTestTye\"\n        control={control}\n        defaultValue={get(defaultValue, \"resultSemenTestTye\", 0)}\n        render={({field: {ref, ...others}}) => (<Select\n          className=\"w-full mb-3 sm:col-span-6\"\n          options={RESULT_LIST}\n          inputProps={{label: \"Kết quả xét nghiệm tinh dịch đồ của lần trước\"}}\n          {...others}\n        />)}\n      />\n      <Controller\n        name=\"mDiagnosticType\"\n        control={control}\n        defaultValue={get(defaultValue, \"mDiagnosticType\", 0)}\n        render={({field: {ref, ...others}}) => (<Select\n          className=\"w-full mb-3 sm:col-span-6\"\n          options={DIAGNOSE_LIST}\n          inputProps={{label: \"Chẩn đoán\"}}\n          {...others}\n        />)}\n      />\n    </div>\n  </div>);\n}\n\nexport default FormSemenChartInfo;","import React, { useEffect } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport FormInfo, { FormInfoSchema, FormInfoValues } from \"components/form/info\";\nimport FormStimulant, { FormStimulantValues } from \"components/form/stimulant\";\nimport FormClinicalInfo, { FormClinicalInfoValues } from \"components/form/clinicalInfo\";\nimport FormSemenChartInfo, { FormSemenChartInfoValues } from \"components/form/semenChartInfo\";\nimport { useGetInfoMaleQuery, useUpdateInfoMutation } from \"features/male/api\";\nimport { PHONE_REGEX } from \"../../utils/constant\";\nimport AlertModal from \"../../components/modals/AlertModal\";\nimport Button from \"../../components/control/button\";\n\ntype FormValues = FormInfoValues & FormStimulantValues & FormClinicalInfoValues & FormSemenChartInfoValues;\n\nconst Male: React.FC<{}>= ()=> {\n  const navigate = useNavigate();\n  const FormSchema = yup.object().shape({\n    ...FormInfoSchema\n  });\n  const [sendInfo, updateInfoState ] = useUpdateInfoMutation();\n  //form\n  const formControl = useForm<FormValues>({\n    mode: \"onSubmit\",\n    resolver: yupResolver(FormSchema),\n  });\n  const { handleSubmit, watch, setValue } = formControl;\n  const watchPhone = watch(\"phone\", \"\");\n\n  useEffect(()=> {\n    console.log(\"updateInfoState\", updateInfoState)\n    if(updateInfoState.isSuccess && !updateInfoState.isLoading){\n      navigate(-1);\n      const { close } = AlertModal({\n        title: \"Thông báo\",\n        description: \"Cập nhật thành công\",\n        type: \"success\",\n        bottomText: \"Đồng ý\",\n        onBottomClick: () => {\n          close();\n        },\n      });\n    }\n  },[updateInfoState])\n  const state = useGetInfoMaleQuery(watchPhone, {skip: !PHONE_REGEX.test(watchPhone)});\n  useEffect(()=> {\n    const {isSuccess, data} = state;\n    if(isSuccess && Object.keys(data).length) {\n      for (const [key, value] of Object.entries(data)) {\n        setValue(key as any, value);\n      }\n    }\n  }, [setValue, state])\n  const onSubmit: SubmitHandler<FormValues> = (data) => {\n    console.log(\"data\", data)\n    sendInfo(data)\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"text-primary-5\">\n        <FormInfo formControl={formControl}/>\n        <FormStimulant formControl={formControl}/>\n        <FormClinicalInfo formControl={formControl}/>\n        <FormSemenChartInfo formControl={formControl}/>\n        <div className=\"flex flex-col items-center justify-center max-w-xs mx-auto\">\n          <Button color={\"primary\"} type=\"submit\" className=\"w-12 bg-blue-800\" variant=\"contained\">Lưu</Button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default Male;"],"sourceRoot":""}